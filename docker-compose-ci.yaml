version: "3.8"
services:
  front:
    image: sermalenk/skypro-front:lesson-38
    depends_on:
      - api
    ports:
      - '80:80'
    volumes:
      - static:/usr/share/nginx/html/django_static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  api:
    image: $DOCKER_USERNAME/diploma:api-$GITHUB_RUN_ID
    depends_on:
      migrations:
        condition: service_completed_successfully
    env_file: .env
    volumes:
      - static:/task_manager/static

  bot:
    image: $DOCKER_USERNAME/diploma:api-$GITHUB_RUN_ID
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c 'python3 manage.py runbot'

  migrations:
    image: $DOCKER_USERNAME/diploma:api-$GITHUB_RUN_ID
    command: >
      sh -c 'poetry run python3 manage.py makemigrations && poetry run python3 manage.py migrate'
    depends_on:
      db:
        condition: service_healthy
    env_file: .env

  db:
    image: postgres:alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready --username=$POSTGRES_USER -d $POSTGRES_NAME']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  static: