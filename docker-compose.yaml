version: "3.8"
services:
  front:
    image: sermalenk/skypro-front:lesson-38
    depends_on:
      - api
    ports:
      - '80:80'
    volumes:
      - ./task_manager/static:/usr/share/nginx/html/django_static
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf

  api:
    build:
      context: .
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      bot:
        condition: service_started
    volumes:
      - ./task_manager/core:/task_manager/core
      - ./task_manager/task_manager:/task_manager/task_manager

  bot:
    build:
      context: .
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c 'python3 manage.py runbot'        

  migrations:
    build:
      context: .
    env_file:
      - .env
    command: >
      sh -c 'python3 manage.py makemigrations && python3 manage.py migrate'
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
